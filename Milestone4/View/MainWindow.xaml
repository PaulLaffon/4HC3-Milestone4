<Window x:Class="Milestone4.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Milestone4.View"
        xmlns:viewmodel="clr-namespace:Milestone4.ViewModel"
        mc:Ignorable="d"
        Title="Hot-Jobs.com"
        Background="White"
        WindowStartupLocation="CenterScreen"
        MinWidth="960" MinHeight="660"
        Width="960" Height="660"
        x:Name="RootWindow"
        d:DesignHeight="1080" d:DesignWidth="1920">
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="WindowState" Value="Maximized">
                    <Setter Property="BorderThickness" Value="6" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="35"
            CornerRadius="0"
            GlassFrameThickness="0"
            NonClientFrameEdges="None"
            ResizeBorderThickness="5"/>
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <viewmodel:StateToVisibilityConverter x:Key="stateConverter" />
        <viewmodel:NotStateToVisibilityConverter x:Key="notStateConverter" />
        
        <Style TargetType="{x:Type Button}" x:Key="TopMenuButtonStyle">
            <Setter Property="Margin" Value="10,0,10,10"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Padding="15,7" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF51536A"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Background" Value="#FF3D3F56"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="MenuButtonStyle">
            <Setter Property="Width" Value="46"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="FontFamily" Value="{StaticResource Segoe MDL2 Assets}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF51536A"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MenuButtonStyle}" x:Key="CloseMenuButtonStyle">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFE81123"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <DockPanel>
        <!--Window header-->
        <Border DockPanel.Dock="Top" Padding="10,0,0,0" BorderBrush="#FF0079CB" Background="#FF202340" BorderThickness="0,0,0,2">
            <DockPanel>
                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" VerticalAlignment="Top">
                    <Button Content="&#xE949;" WindowChrome.IsHitTestVisibleInChrome="True" Click="OnMinimizeButtonClicked" Style="{StaticResource MenuButtonStyle}"/>
                    <Button Content="&#xE739;" WindowChrome.IsHitTestVisibleInChrome="True" Click="OnMaximizeClicked">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MenuButtonStyle}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WindowState, ElementName=RootWindow}" Value="Maximized">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="&#xE923;" WindowChrome.IsHitTestVisibleInChrome="True" Click="OnRestoreButtonClicked">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MenuButtonStyle}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WindowState, ElementName=RootWindow}" Value="Maximized">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="&#xE106;" WindowChrome.IsHitTestVisibleInChrome="True" Click="OnCloseButtonClicked" Style="{StaticResource CloseMenuButtonStyle}"/>
                </StackPanel>
                <DockPanel DockPanel.Dock="Bottom"
                           Visibility="{Binding State, Converter={StaticResource notStateConverter}, ConverterParameter={x:Static viewmodel:SystemState.Welcome}}">
                    <Button DockPanel.Dock="Left" Content="My profile" WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource TopMenuButtonStyle}"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button Content="Browse jobs" WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource TopMenuButtonStyle}"/>
                        <Button Content="My applications" WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource TopMenuButtonStyle}"/>
                        <Button Content="Saved jobs" WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource TopMenuButtonStyle}"/>
                        <Button Content="My Files" WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource TopMenuButtonStyle}"/>
                    </StackPanel>
                </DockPanel>
                <Image DockPanel.Dock="Left" Margin="0,0,0,0" Width="30" Source="Resources/icon.png"/>
                <TextBlock Text="{Binding Title, ElementName=RootWindow, Mode=OneTime}" Foreground="White" Margin="8,15"/>
            </DockPanel>
        </Border>
        <Grid>
            <local:WelcomeView Visibility="{Binding State, Converter={StaticResource stateConverter}, ConverterParameter={x:Static viewmodel:SystemState.Welcome}}"/>
            <local:BrowseJobView Visibility="{Binding State, Converter={StaticResource stateConverter}, ConverterParameter={x:Static viewmodel:SystemState.Browse}}"/>
            <local:ApplyView Visibility="{Binding State, Converter={StaticResource stateConverter}, ConverterParameter={x:Static viewmodel:SystemState.Apply}}"/>
            <local:AppliedJobsView Visibility="{Binding State, Converter={StaticResource stateConverter}, ConverterParameter={x:Static viewmodel:SystemState.AppliedJobs}}"/>

        </Grid>
    </DockPanel>

</Window>
